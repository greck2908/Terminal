<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
the MIT License. See LICENSE in the project root for license information. -->
<Page
    x:Class="Microsoft.Terminal.Settings.Editor.ColorSchemes"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.Terminal.Settings.Editor"
    xmlns:model="using:Microsoft.Terminal.Settings.Model"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CommonResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Thickness x:Key="ColorSchemesStandardControlMargin">0,0,10,20</Thickness>

            <Style x:Key="ColorStackPanelStyle" TargetType="StackPanel">
                <Setter Property="Margin" Value="{StaticResource ColorSchemesStandardControlMargin}"/>
                <Setter Property="Height" Value="59"/>
            </Style>

            <Style x:Key="ColorHeaderStyle" TargetType="TextBlock">
                <Setter Property="Margin" Value="0,0,0,4"/>
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
                <Setter Property="BorderBrush" Value="{StaticResource SystemBaseLowColor}"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="100"/>
            </Style>

            <Style TargetType="ColorPicker">
                <Setter Property="IsColorSliderVisible" Value="False"/>
                <Setter Property="IsColorChannelTextInputVisible" Value="False"/>
                <Setter Property="IsHexInputVisible" Value="True"/>
                <Setter Property="IsAlphaSliderVisible" Value="True"/>
                <Setter Property="IsAlphaTextInputVisible" Value="True"/>
            </Style>

            <local:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
            <local:ColorToHexConverter x:Key="ColorToHexConverter"/>
            <local:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Page.Resources>

    <ScrollViewer>
        <Grid Margin="{StaticResource StandardIndentMargin}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" MaxWidth="480"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <!--Select Color and Add New Button-->
            <StackPanel Orientation="Horizontal"
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="{StaticResource StandardControlSpacing}">

                <StackPanel Orientation="Horizontal"
                            Visibility="{x:Bind IsRenaming, Converter={StaticResource InvertedBooleanToVisibilityConverter}, Mode=OneWay}">
                    <!--Select a color scheme-->
                    <ComboBox x:Name="ColorSchemeComboBox"
                              SelectedIndex="0"
                              ItemsSource="{x:Bind ColorSchemeList, Mode=OneWay}"
                              SelectionChanged="ColorSchemeSelectionChanged"
                              Style="{StaticResource ComboBoxSettingStyle}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate x:DataType="model:ColorScheme">
                                <TextBlock Text="{x:Bind Name, Mode=OneWay}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <!--Rename Button-->
                    <!--Bind IsEnabled to prevent a the color scheme from returning from the dead-->
                    <Button x:Uid="Rename"
                            Style="{StaticResource BrowseButtonStyle}"
                            Click="Rename_Click"
                            IsEnabled="{x:Bind CanDeleteCurrentScheme, Mode=OneWay}">
                        <FontIcon Glyph="&#xE8AC;"/>
                    </Button>
                </StackPanel>

                <StackPanel Orientation="Horizontal"
                            Visibility="{x:Bind IsRenaming, Mode=OneWay}">
                    <TextBox x:Name="NameBox"
                             Style="{StaticResource TextBoxSettingStyle}"
                             PreviewKeyDown="NameBox_PreviewKeyDown"/>
                    <Button x:Uid="RenameAccept"
                            Style="{StaticResource AccentBrowseButtonStyle}"
                            Click="RenameAccept_Click">
                        <FontIcon Glyph="&#xE8FB;"/>
                    </Button>
                    <Button x:Uid="RenameCancel"
                            Style="{StaticResource BrowseButtonStyle}"
                            Click="RenameCancel_Click">
                        <FontIcon Glyph="&#xE711;"/>
                    </Button>
                </StackPanel>

                <!--Add new button-->
                <Button Click="AddNew_Click"
                        Style="{StaticResource BrowseButtonStyle}">
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xE710;"
                                  FontSize="15"/>
                        <TextBlock x:Uid="ColorScheme_AddNewButton"
                                   Margin="10,0,0,0"
                                   FontSize="15"/>
                    </StackPanel>
                </Button>
            </StackPanel>

            <!-- Color Table (Left Column)-->
            <ItemsControl x:Name="ColorTableControl"
                          ItemsSource="{x:Bind CurrentColorTable, Mode=OneWay}"
                          Grid.Row="1"
                          Grid.Column="0">

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid Orientation="Horizontal"
                                       MaximumRowsOrColumns="4"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="local:ColorTableEntry">
                        <StackPanel Style="{StaticResource ColorStackPanelStyle}">
                            <TextBlock Text="{x:Bind Name, Mode=OneWay}"
                                       Style="{StaticResource ColorHeaderStyle}"/>
                            <Button Background="{x:Bind Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                                <Button.Flyout>
                                    <Flyout>
                                        <ColorPicker Tag="{x:Bind Index, Mode=OneWay}"
                                                     Color="{x:Bind Color, Mode=OneWay}"
                                                     ColorChanged="ColorPickerChanged"/>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Additional Colors (Right Column) -->
            <ItemsControl Grid.Row="1"
                          Grid.Column="1">
                <StackPanel Style="{StaticResource ColorStackPanelStyle}">
                    <TextBlock x:Uid="ColorScheme_Foreground"
                               Style="{StaticResource ColorHeaderStyle}"/>
                    <Button Background="{Binding Color, ElementName=ForegroundPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="ForegroundPicker" Color="{x:Bind CurrentColorScheme.Foreground, Mode=TwoWay}"/>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
                <StackPanel Style="{StaticResource ColorStackPanelStyle}">
                    <TextBlock x:Uid="ColorScheme_Background"
                               Style="{StaticResource ColorHeaderStyle}"/>
                    <Button Background="{Binding Color, ElementName=BackgroundPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="BackgroundPicker"
                                             Color="{x:Bind CurrentColorScheme.Background, Mode=TwoWay}"/>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
                <StackPanel Style="{StaticResource ColorStackPanelStyle}">
                    <TextBlock x:Uid="ColorScheme_CursorColor"
                               Style="{StaticResource ColorHeaderStyle}"/>
                    <Button Background="{Binding Color, ElementName=CursorColorPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="CursorColorPicker"
                                             Color="{x:Bind CurrentColorScheme.CursorColor, Mode=TwoWay}"/>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
                <StackPanel Style="{StaticResource ColorStackPanelStyle}">
                    <TextBlock x:Uid="ColorScheme_SelectionBackground"
                               Style="{StaticResource ColorHeaderStyle}"/>
                    <Button Background="{Binding Color, ElementName=SelectionBackgroundPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="SelectionBackgroundPicker"
                                             Color="{x:Bind CurrentColorScheme.SelectionBackground, Mode=TwoWay}"/>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
            </ItemsControl>

            <!--Delete Button-->
            <StackPanel Grid.Row="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="{StaticResource StandardControlSpacing}">
                <Button x:Name="DeleteButton"
                        Style="{StaticResource BaseButtonStyle}"
                        IsEnabled="{x:Bind CanDeleteCurrentScheme, Mode=OneWay}"
                        Margin="0,0,0,10">
                    <Button.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.ThemeDictionaries>
                                <ResourceDictionary x:Key="Light">
                                    <SolidColorBrush x:Key="ButtonBackground" Color="Firebrick"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#C23232"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#A21212"/>
                                    <SolidColorBrush x:Key="ButtonForeground" Color="White"/>
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                    <SolidColorBrush x:Key="ButtonForegroundPressed" Color="White"/>
                                </ResourceDictionary>
                                <ResourceDictionary x:Key="Dark">
                                    <SolidColorBrush x:Key="ButtonBackground" Color="Firebrick"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#C23232"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#A21212"/>
                                    <SolidColorBrush x:Key="ButtonForeground" Color="White"/>
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                    <SolidColorBrush x:Key="ButtonForegroundPressed" Color="White"/>
                                </ResourceDictionary>
                                <ResourceDictionary x:Key="HighContrast">
                                    <SolidColorBrush x:Key="ButtonBackground" Color="{ThemeResource SystemColorButtonFaceColor}"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{ThemeResource SystemColorHighlightColor}"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{ThemeResource SystemColorHighlightColor}"/>
                                    <SolidColorBrush x:Key="ButtonForeground" Color="{ThemeResource SystemColorButtonTextColor}"/>
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="{ThemeResource SystemColorHighlightTextColor}"/>
                                    <SolidColorBrush x:Key="ButtonForegroundPressed" Color="{ThemeResource SystemColorHighlightTextColor}"/>
                                </ResourceDictionary>
                            </ResourceDictionary.ThemeDictionaries>
                        </ResourceDictionary>
                    </Button.Resources>
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE74D;"
                                      FontSize="{StaticResource StandardFontSize}"/>
                            <TextBlock x:Uid="ColorScheme_DeleteButton"
                                       FontSize="{StaticResource StandardFontSize}"
                                       Margin="10,0,0,0"/>
                        </StackPanel>
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <TextBlock x:Uid="ColorScheme_DeleteConfirmationMessage"
                                           Style="{StaticResource CustomFlyoutTextStyle}"/>
                                <Button x:Uid="ColorScheme_DeleteConfirmationButton"
                                        Style="{StaticResource BaseButtonStyle}"
                                        Click="DeleteConfirmation_Click"/>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <TextBlock x:Name="DeleteButtonDisclaimer"
                           Style="{StaticResource DisclaimerStyle}"
                           VerticalAlignment="Center"/>
            </StackPanel>
        </Grid>
    </ScrollViewer>
</Page>
